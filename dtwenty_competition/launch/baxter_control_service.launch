<?xml version="1.0"?>
<launch>

  <arg name="planner" default="ompl" />	

  <include ns="move_group" file="$(find baxter_moveit_config)/launch/planning_pipeline.launch">
    <arg name="pipeline" value="$(arg planner)" />
  </include>

  <node name="joint_action_server" pkg="baxter_interface" type="joint_trajectory_action_server.py" respawn="false"/>
  
  <node name="move_group" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="joint_states:=/robot/joint_states">
    <param name="allow_trajectory_execution" value="true"/>
    <param name="max_safe_path_cost" value="1.0"/>
    <param name="jiggle_fraction" value="0.05" />
    
    <param name="capabilities" value="move_group/MoveGroupCartesianPathService
				      move_group/MoveGroupExecuteTrajectoryAction
				      move_group/MoveGroupKinematicsService
				      move_group/MoveGroupMoveAction
				      move_group/MoveGroupPickPlaceAction
				      move_group/MoveGroupPlanService
				      move_group/MoveGroupQueryPlannersService
				      move_group/MoveGroupStateValidationService
				      move_group/MoveGroupGetPlanningSceneService
				      move_group/ClearOctomapService
				      move_group/ApplyPlanningSceneService
				      " />
    <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
  </node>

</launch>
